{
  "env": {
    "browser": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "ignorePatterns": ["node_modules/*"],
  "extends": ["eslint:recommended", "prettier"],
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "settings": { "react": { "version": "detect" } },
      "env": {
        "browser": true,
        "node": true,
        "es6": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended", // TypeScript rules
        "plugin:react/recommended", // React rules
        "plugin:react-hooks/recommended", // React hooks rules
        "plugin:jsx-a11y/recommended", // Accessibility rules
        "plugin:prettier/recommended" // Prettier plugin
      ],
      "rules": {
        // We will use TypeScript's types for component props instead
        "react/prop-types": "off",

        // No need to import React when using react17+
        "react/react-in-jsx-scope": "off",

        "jsx-a11y/anchor-is-valid": "off",

        // Why would you want unused vars?
        "@typescript-eslint/no-unused-vars": ["error"],

        "jsx-a11y/click-events-have-key-events": "off",
        "sx-a11y/no-static-element-interactions": "off",

        // I suggest this setting for requiring return types on functions only where useful
        "@typescript-eslint/explicit-function-return-type": [
          "warn",
          {
            "allowExpressions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],
        "@typescript-eslint/no-non-null-assertion": "off",
        "prettier/prettier": [
          "error",
          { "endOfLine": "auto" },
          { "usePrettierrc": true, "endOfLine": "auto" }
        ], // Includes .prettierrc.js rules
        "jsx-a11y/no-autofocus": [
          2,
          {
            "ignoreNonDOM": true
          }
        ]
      }
    }
  ],
  "plugins": ["react", "@typescript-eslint"]
}
